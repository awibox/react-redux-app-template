// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Repos should render coorectly 1`] = `
<Connect(ReposContainer)
  getReposAction={[Function]}
  match={
    Object {
      "params": Object {
        "user": "test",
      },
    }
  }
>
  <div
    className="repos"
  >
    <ForwardRef(render)
      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
      css={
        Object {
          "background": "#D15130",
          "border": "1px solid #D15130",
          "borderRadius": "4px",
          "boxShadow": "0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24)",
          "color": "#fff",
          "marginBottom": "15px",
          "padding": "15px",
          "position": "relative",
          "transition": "all 0.3s cubic-bezier(.25, .8, .25, 1)",
        }
      }
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="css-1nrs082"
        style={
          Object {
            "display": "block",
          }
        }
      >
        Fake error
      </div>
    </ForwardRef(render)>
    <div
      className="title"
    >
      Select the user
    </div>
    <ForwardRef(render)
      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
      css={
        Object {
          "background": "#fff",
          "border": "1px solid #E5E8EC",
          "borderRadius": "3px",
          "borderTop": undefined,
          "boxShadow": "0 1px 3px rgba(0, 0, 0, 0.12)",
          "boxSizing": "border-box",
          "marginBottom": "0px",
          "overflow": "hidden",
          "transition": "all 0.3s cubic-bezier(.25, .8, .25, 1)",
        }
      }
    >
      <div
        className="css-1lf9jjb"
      >
        <ForwardRef(render)
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
          css={
            Object {
              "padding": "0px",
            }
          }
        >
          <div
            className="css-old1by"
          >
            <div
              className="users"
            >
              <NavLink
                activeClassName="linkActive"
                className="link"
                key="awibox"
                onClick={[Function]}
                to="/repos/awibox"
              >
                <Link
                  aria-current={null}
                  className="link"
                  onClick={[Function]}
                  to={
                    Object {
                      "hash": "",
                      "pathname": "/repos/awibox",
                      "search": "",
                      "state": null,
                    }
                  }
                >
                  <LinkAnchor
                    aria-current={null}
                    className="link"
                    href="/repos/awibox"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      aria-current={null}
                      className="link"
                      href="/repos/awibox"
                      onClick={[Function]}
                    >
                      <div
                        className="user"
                      >
                        <i
                          className="fa fa-user"
                        />
                        awibox
                      </div>
                    </a>
                  </LinkAnchor>
                </Link>
              </NavLink>
              <NavLink
                activeClassName="linkActive"
                className="link"
                key="angular"
                onClick={[Function]}
                to="/repos/angular"
              >
                <Link
                  aria-current={null}
                  className="link"
                  onClick={[Function]}
                  to={
                    Object {
                      "hash": "",
                      "pathname": "/repos/angular",
                      "search": "",
                      "state": null,
                    }
                  }
                >
                  <LinkAnchor
                    aria-current={null}
                    className="link"
                    href="/repos/angular"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      aria-current={null}
                      className="link"
                      href="/repos/angular"
                      onClick={[Function]}
                    >
                      <div
                        className="user"
                      >
                        <i
                          className="fa fa-user"
                        />
                        angular
                      </div>
                    </a>
                  </LinkAnchor>
                </Link>
              </NavLink>
              <NavLink
                activeClassName="linkActive"
                className="link"
                key="facebook"
                onClick={[Function]}
                to="/repos/facebook"
              >
                <Link
                  aria-current={null}
                  className="link"
                  onClick={[Function]}
                  to={
                    Object {
                      "hash": "",
                      "pathname": "/repos/facebook",
                      "search": "",
                      "state": null,
                    }
                  }
                >
                  <LinkAnchor
                    aria-current={null}
                    className="link"
                    href="/repos/facebook"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      aria-current={null}
                      className="link"
                      href="/repos/facebook"
                      onClick={[Function]}
                    >
                      <div
                        className="user"
                      >
                        <i
                          className="fa fa-user"
                        />
                        facebook
                      </div>
                    </a>
                  </LinkAnchor>
                </Link>
              </NavLink>
              <NavLink
                activeClassName="linkActive"
                className="link"
                key="reduxjs"
                onClick={[Function]}
                to="/repos/reduxjs"
              >
                <Link
                  aria-current={null}
                  className="link"
                  onClick={[Function]}
                  to={
                    Object {
                      "hash": "",
                      "pathname": "/repos/reduxjs",
                      "search": "",
                      "state": null,
                    }
                  }
                >
                  <LinkAnchor
                    aria-current={null}
                    className="link"
                    href="/repos/reduxjs"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      aria-current={null}
                      className="link"
                      href="/repos/reduxjs"
                      onClick={[Function]}
                    >
                      <div
                        className="user"
                      >
                        <i
                          className="fa fa-user"
                        />
                        reduxjs
                      </div>
                    </a>
                  </LinkAnchor>
                </Link>
              </NavLink>
              <NavLink
                activeClassName="linkActive"
                className="link"
                key="webpack"
                onClick={[Function]}
                to="/repos/webpack"
              >
                <Link
                  aria-current={null}
                  className="link"
                  onClick={[Function]}
                  to={
                    Object {
                      "hash": "",
                      "pathname": "/repos/webpack",
                      "search": "",
                      "state": null,
                    }
                  }
                >
                  <LinkAnchor
                    aria-current={null}
                    className="link"
                    href="/repos/webpack"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      aria-current={null}
                      className="link"
                      href="/repos/webpack"
                      onClick={[Function]}
                    >
                      <div
                        className="user"
                      >
                        <i
                          className="fa fa-user"
                        />
                        webpack
                      </div>
                    </a>
                  </LinkAnchor>
                </Link>
              </NavLink>
            </div>
          </div>
        </ForwardRef(render)>
      </div>
    </ForwardRef(render)>
    <div
      style={
        Object {
          "height": "20px",
          "width": "100%",
        }
      }
    />
    <div
      className="title"
    >
      Repositories of 
      test
    </div>
    <div
      className="reposList"
    >
      <div
        className="repo"
      >
        <ForwardRef(render)
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
          css={
            Object {
              "background": "#fff",
              "border": "1px solid #E5E8EC",
              "borderRadius": "3px",
              "borderTop": undefined,
              "boxShadow": "0 1px 3px rgba(0, 0, 0, 0.12)",
              "boxSizing": "border-box",
              "marginBottom": "15px",
              "overflow": "hidden",
              "transition": "all 0.3s cubic-bezier(.25, .8, .25, 1)",
            }
          }
        >
          <div
            className="css-1an3q4h"
          >
            <ForwardRef(render)
              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
              css={
                Object {
                  "padding": "15px",
                }
              }
            >
              <div
                className="css-1v1qs4"
              >
                <a
                  className="name"
                  href="http://localhost:8888/item"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  First Repo
                </a>
                <div
                  className="githubIcon"
                >
                  <i
                    aria-hidden="true"
                    className="fa fa-github"
                  />
                </div>
                <div
                  className="desc"
                >
                  Repository
                </div>
                <div
                  className="panel"
                >
                  <div
                    className="property"
                  >
                    <i
                      className="fa fa-circle"
                      style={Object {}}
                    />
                     
                    javascript
                  </div>
                  <div
                    className="size"
                  >
                    <i
                      className="fa fa-file-archive-o"
                    />
                     
                    0.01
                     mb
                  </div>
                  <div
                    className="stars"
                  >
                    <i
                      aria-hidden="true"
                      className="fa fa-star"
                    />
                     
                    10
                  </div>
                </div>
              </div>
            </ForwardRef(render)>
          </div>
        </ForwardRef(render)>
      </div>
    </div>
    <div
      style={
        Object {
          "backfaceVisibility": "hidden",
          "background": "rgba(255,255,255,.5)",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 10,
        }
      }
    >
      <div
        style={
          Object {
            "height": 100,
            "left": "50%",
            "position": "absolute",
            "top": "50%",
            "transform": "translate(-50%, -50%)",
            "width": 100,
          }
        }
      >
        <svg
          className="lds-spinner"
          height="100%"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="100%"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            key="rotate(0 50 50)"
            transform="rotate(0 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.9166666666666666s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(30 50 50)"
            transform="rotate(30 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.8333333333333334s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(60 50 50)"
            transform="rotate(60 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.75s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(90 50 50)"
            transform="rotate(90 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.6666666666666666s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(120 50 50)"
            transform="rotate(120 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.5833333333333334s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(150 50 50)"
            transform="rotate(150 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.5s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(180 50 50)"
            transform="rotate(180 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.4166666666666667s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(210 50 50)"
            transform="rotate(210 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.3333333333333333s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(240 50 50)"
            transform="rotate(240 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.25s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(270 50 50)"
            transform="rotate(270 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.16666666666666666s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(300 50 50)"
            transform="rotate(300 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="-0.08333333333333333s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
          <g
            key="rotate(330 50 50)"
            transform="rotate(330 50 50)"
          >
            <rect
              fill="#3F88C5"
              height="12"
              rx="9.4"
              ry="4.8"
              width="6"
              x="47"
              y="24"
            >
              <animate
                attributeName="opacity"
                begin="0s"
                dur="1s"
                keyTimes="0;1"
                repeatCount="indefinite"
                values="1;0"
              />
            </rect>
          </g>
        </svg>
      </div>
    </div>
  </div>
</Connect(ReposContainer)>
`;
